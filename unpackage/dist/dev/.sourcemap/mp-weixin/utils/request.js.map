{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["import { getToken } from '@/utils/auth'\r\n\r\n// 配置基础URL - 根据实际环境配置\r\nconst BASE_URL = process.env.NODE_ENV === 'development' \r\n  ? 'http://192.168.31.41:8081/api'  // 开发环境（请替换为你的电脑IP）\r\n  : 'https://your-production-domain.com/api'  // 生产环境\r\nconst TIMEOUT = 15000 // 15秒超时\r\n\r\n// 创建请求实例\r\nconst request = (options) => {\r\n  // 拼接完整请求路径\r\n  let url = BASE_URL + options.url\r\n  \r\n  // 处理query参数\r\n  if (options.params) {\r\n    const queryString = Object.entries(options.params)\r\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n      .join('&')\r\n    url += `?${queryString}`\r\n  }\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    const token = uni.getStorageSync('token')\r\n    const header = {\r\n      'Content-Type': 'application/json'\r\n    }\r\n    \r\n    if (token) {\r\n      header['Authorization'] = `Bearer ${token}`\r\n    }\r\n    \r\n    uni.request({\r\n      ...options,\r\n      url,\r\n      header,\r\n      timeout: TIMEOUT,\r\n      success: (res) => {\r\n        if (res.statusCode >= 200 && res.statusCode < 300) {\r\n          resolve(res.data)\r\n        } else if (res.statusCode === 401) {\r\n          // token过期或无效，清除登录状态\r\n          uni.removeStorageSync('token')\r\n          uni.removeStorageSync('userInfo')\r\n          uni.showToast({\r\n            title: '请重新登录',\r\n            icon: 'none'\r\n          })\r\n          reject(new Error('未授权'))\r\n        } else {\r\n          reject(new Error(res.data.message || '请求失败'))\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        console.error('请求失败:', err)\r\n        reject(new Error('网络请求失败'))\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 导出请求方法\r\nexport default {\r\n  get(url, data = {}, params = {}) {\r\n    return request({\r\n      url,\r\n      method: 'GET',\r\n      data,\r\n      params\r\n    })\r\n  },\r\n\r\n  post(url, data = {}, params = {}) {\r\n    return request({\r\n      url,\r\n      method: 'POST',\r\n      data,\r\n      params\r\n    })\r\n  },\r\n  \r\n  put(url, data = {}) {\r\n    return request({\r\n      url,\r\n      method: 'PUT',\r\n      data\r\n    })\r\n  },\r\n  \r\n  delete(url, data = {}) {\r\n    return request({\r\n      url,\r\n      method: 'DELETE',\r\n      data\r\n    })\r\n  }\r\n} "],"names":["uni"],"mappings":";;AAGA,MAAM,WACF;AAEJ,MAAM,UAAU;AAGhB,MAAM,UAAU,CAAC,YAAY;AAEvB,MAAA,MAAM,WAAW,QAAQ;AAG7B,MAAI,QAAQ,QAAQ;AACZ,UAAA,cAAc,OAAO,QAAQ,QAAQ,MAAM,EAC9C,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,GAAG,IAAI,mBAAmB,KAAK,CAAC,EAAE,EAC3D,KAAK,GAAG;AACX,WAAO,IAAI,WAAW;AAAA,EACxB;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAChC,UAAA,QAAQA,cAAAA,MAAI,eAAe,OAAO;AACxC,UAAM,SAAS;AAAA,MACb,gBAAgB;AAAA,IAAA;AAGlB,QAAI,OAAO;AACF,aAAA,eAAe,IAAI,UAAU,KAAK;AAAA,IAC3C;AAEAA,kBAAAA,MAAI,QAAQ;AAAA,MACV,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT,SAAS,CAAC,QAAQ;AAChB,YAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AACjD,kBAAQ,IAAI,IAAI;AAAA,QAAA,WACP,IAAI,eAAe,KAAK;AAEjCA,8BAAI,kBAAkB,OAAO;AAC7BA,8BAAI,kBAAkB,UAAU;AAChCA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAAA,CACP;AACM,iBAAA,IAAI,MAAM,KAAK,CAAC;AAAA,QAAA,OAClB;AACL,iBAAO,IAAI,MAAM,IAAI,KAAK,WAAW,MAAM,CAAC;AAAA,QAC9C;AAAA,MACF;AAAA,MACA,MAAM,CAAC,QAAQ;AACbA,sBAAA,+CAAc,SAAS,GAAG;AACnB,eAAA,IAAI,MAAM,QAAQ,CAAC;AAAA,MAC5B;AAAA,IAAA,CACD;AAAA,EAAA,CACF;AACH;AAGA,MAAe,YAAA;AAAA,EACb,IAAI,KAAK,OAAO,CAAA,GAAI,SAAS,CAAA,GAAI;AAC/B,WAAO,QAAQ;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEA,KAAK,KAAK,OAAO,CAAA,GAAI,SAAS,CAAA,GAAI;AAChC,WAAO,QAAQ;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEA,IAAI,KAAK,OAAO,IAAI;AAClB,WAAO,QAAQ;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,IAAA,CACD;AAAA,EACH;AAAA,EAEA,OAAO,KAAK,OAAO,IAAI;AACrB,WAAO,QAAQ;AAAA,MACb;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,IAAA,CACD;AAAA,EACH;AACF;;"}